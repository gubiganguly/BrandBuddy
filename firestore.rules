rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow authenticated users to read other users' profiles (for discovery)
      allow read: if request.auth != null;
    }
    
    // Brands collection - comprehensive brand management rules
    match /brands/{brandId} {
      // Allow anyone to read active brands (for browsing/discovery)
      allow read: if resource.data.isActive == true;
      
      // Allow authenticated users to create new brands
      allow create: if request.auth != null &&
        // Ensure the user is creating a brand for themselves
        request.auth.uid == request.resource.data.ownerId &&
        // Validate required fields are present
        request.resource.data.keys().hasAll(['name', 'category', 'description', 'location', 'dealType', 'contact', 'ownerId', 'isActive', 'verified', 'reviews', 'createdAt', 'updatedAt']) &&
        // Ensure isActive is true for new brands
        request.resource.data.isActive == true &&
        // Ensure verified is false for new brands (only admins can verify)
        request.resource.data.verified == false &&
        // Ensure reviews is empty for new brands
        request.resource.data.reviews.size() == 0;
      
      // Allow brand owners to update their own brands
      allow update: if request.auth != null &&
        request.auth.uid == resource.data.ownerId &&
        // Prevent changing ownerId
        request.resource.data.ownerId == resource.data.ownerId &&
        // Prevent non-admins from changing verified status
        request.resource.data.verified == resource.data.verified;
      
      // Allow brand owners to delete (deactivate) their own brands
      allow delete: if request.auth != null &&
        request.auth.uid == resource.data.ownerId;
    }
    
    // Deny all other operations
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 